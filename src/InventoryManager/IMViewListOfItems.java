package InventoryManager;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;

public class IMViewListOfItems extends javax.swing.JFrame {

   
    private DefaultTableModel tableModel;
    private InventoryManager im = new InventoryManager();

    

    /**
     * Creates new form ViewListOfItems
     */
//    public IMViewListOfItems() {
//        initComponents();
//        
//        // Column headers
//        String[] columnNames = {"Item ID", "Item Name", "Stock", "Price","Threshold"};
//        // Create non-editable table model
//        DefaultTableModel model = new DefaultTableModel(columnNames, 0) {
//            @Override
//            public boolean isCellEditable(int row, int column) {
//                return false; // Make table non-editable
//            }
//        };
//        itemTable.setModel(model);
//
//        try (BufferedReader reader = new BufferedReader(new FileReader("data/item.txt"))) {
//            String line;
//            while ((line = reader.readLine()) != null) {
//                String[] data = line.split(",");
//                if (data.length == 5) {
//                    // Add full row to table
//                    model.addRow(data);
//                    // Add only Item ID and Name to combo box
//                    CmbItem.addItem(data[0] + " / " + data[1]);
//                } else {
//                    System.out.println("Invalid line: " + line);
//                }
//            }
//        } catch (IOException e) {
//            JOptionPane.showMessageDialog(this, "Error reading item.txt: " + e.getMessage());
//        }
//        
//        CmbItem.addActionListener(new ActionListener() {
//            public void actionPerformed(ActionEvent e) {
//                String selected = (String) CmbItem.getSelectedItem();
//                if (selected != null && selected.contains(" / ")) {
//                    String selectedID = selected.split(" / ")[0];
//                    for (int i = 0; i < itemTable.getRowCount(); i++) {
//                        if (itemTable.getValueAt(i, 0).toString().equals(selectedID)) {
//                            itemTable.setRowSelectionInterval(i, i);
//                            itemTable.scrollRectToVisible(itemTable.getCellRect(i, 0, true));
//                            break;
//                        }
//                    }
//                }
//            }
//        });
//    }
    public IMViewListOfItems() {
        initComponents();

        // Column headers
        String[] columnNames = {"Item ID", "Item Name", "Stock", "Price", "Threshold"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        itemTable.setModel(model);

        // Use the method to get item data
        List<String[]> items = im.viewItems();
        for (String[] data : items) {
            if (data.length == 5) {
                model.addRow(data);
                CmbItem.addItem(data[0] + " / " + data[1]);
            } else {
                System.out.println("Invalid item data: " + Arrays.toString(data));
            }
        }

        // ComboBox item selection behavior
        CmbItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String selected = (String) CmbItem.getSelectedItem();
                if (selected != null && selected.contains(" / ")) {
                    String selectedID = selected.split(" / ")[0];
                    for (int i = 0; i < itemTable.getRowCount(); i++) {
                        if (itemTable.getValueAt(i, 0).toString().equals(selectedID)) {
                            itemTable.setRowSelectionInterval(i, i);
                            itemTable.scrollRectToVisible(itemTable.getCellRect(i, 0, true));
                            break;
                        }
                    }
                }
            }
        });
    }

      
   
        
                
   
                
    

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        CmbItem = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IMViewListOfItems");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 15)); // NOI18N
        jLabel1.setText("View List Of Items");

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Stock ", "Price", "Threshold"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(itemTable);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setText("Search For Item ID/Item Name:");

        CmbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnBack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CmbItem, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CmbItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(btnBack)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new IMMainPage().setVisible(true); // Open the UpdateStock window
        this.dispose(); // Close the current MainPage window
    }//GEN-LAST:event_btnBackActionPerformed

    private void CmbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbItemActionPerformed
        // TODO add your handling code here:
       

        
    }//GEN-LAST:event_CmbItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbItem;
    private javax.swing.JButton btnBack;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
}
