/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PurchaseManager;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author weisi
 */
public class PMRequisitionViewerWindow extends javax.swing.JFrame {
    
    private PurchaseManager pm = new PurchaseManager();

    public PMRequisitionViewerWindow() {
        initComponents();
        DefaultTableModel model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        model.setColumnIdentifiers(new String[] {"Requisition ID", "Requested By", "Date", "Item ID", "Quantity"});
        //function from Chia Zhi
        List<String[]> items = pm.viewPR();
        for (String[] row : items) {
            model.addRow(row);
        }

        tblRequisitions.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequisitions = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnGenerate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Requisition List");

        tblRequisitions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane2.setViewportView(tblRequisitions);

        jScrollPane1.setViewportView(jScrollPane2);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnGenerate.setText("Generate PO");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel1)))
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnClose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerate)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnGenerate))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        int selectedRow = tblRequisitions.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a requisition to generate PO.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblRequisitions.getModel();
        String requisitionID = model.getValueAt(selectedRow, 0).toString();
        String itemID = model.getValueAt(selectedRow, 1).toString();
        String quantity = model.getValueAt(selectedRow, 2).toString();

        String itemName = "";
        String supplierID = "";
        String unitPrice = "";
        String supplierName = "";
        String pmName = "Lee";

        // 1. Read item data
        List<String[]> items = pm.viewItems();
        for (String[] parts : items) {
            if (parts[0].equals(itemID)) {
                itemName = parts[1];
                supplierID = parts[4];
                unitPrice = parts[3];
                break;
            }
        }

        List<String[]> suppliers = pm.viewSupplier();
        for (String[] parts : suppliers) {
            if (parts[0].equals(supplierID)) {
                supplierName = parts[1];
                break;
            }
        }

        if (itemName.isEmpty() || supplierName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Item or Supplier info not found.");
            return;
        }

        String poID = pm.generateNextPOID();
        double price = Double.parseDouble(unitPrice);
        int qty = Integer.parseInt(quantity);
        double total = price * qty;
        String formattedPrice = String.format("%.2f", price);
        String formattedTotal = String.format("%.2f", total);
        String date = java.time.LocalDate.now().toString();
        String status = "Pending";
        PMConfirmationWindow confirm = new PMConfirmationWindow();
        confirm.setPODetails(poID, itemID, itemName, qty, supplierID, supplierName,
                             requisitionID, formattedPrice, formattedTotal, date, status, pmName);
        confirm.setVisible(true);
    }//GEN-LAST:event_btnGenerateActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblRequisitions;
    // End of variables declaration//GEN-END:variables
}
